# This is a top-level pipeline file, which is designed to be added as an optional PR build policy
# so that a VS insertion and all the validation that entails can be done before ever merging the PR
# in its original repo.

trigger: none # We only want to trigger manually or based on resources
pr: none

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release

variables:
- template: GlobalVariables.yml

extends:
  template: azure-pipelines/MicroBuild.1ES.Unofficial.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool: VSEngSS-MicroBuild2022-1ES

    stages:
    - stage: Build
      variables:
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
        NUGET_PACKAGES: $(Agent.TempDirectory)/.nuget/packages/
        BuildConfiguration: Release
        ValidationBuild: true

      jobs:
      - template: /azure-pipelines/build.yml@self
        parameters:
          Is1ESPT: true
          RealSign: true
          windowsPool: VSEngSS-MicroBuild2022-1ES
          includeMacOS: false
          RunTests: false

    - template: /azure-pipelines/prepare-insertion-stages.yml@self
      parameters:
        ArchiveSymbols: false
        RealSign: ${{ parameters.RealSign }}

    - stage: insertion
      displayName: VS insertion
      jobs:
      - job: insertion
        displayName: VS insertion
        pool: VSEngSS-MicroBuild2022-1ES
        steps:
        - checkout: self
          clean: true
          fetchDepth: 1
        - download: current
          artifact: Variables-Windows
          displayName: üîª Download Variables-Windows artifact
        - powershell: $(Pipeline.Workspace)/Variables-Windows/_pipelines.ps1
          displayName: ‚öôÔ∏è Set pipeline variables based on artifacts
        - download: current
          artifact: VSInsertion-Windows
          displayName: üîª Download VSInsertion-Windows artifact
        - task: 1ES.PublishNuget@1
          displayName: üì¶ Push CoreXT packages to VS feed
          inputs:
            packagesToPush: '$(Pipeline.Workspace)/VSInsertion-Windows/*.nupkg'
            packageParentPath: $(Pipeline.Workspace)/VSInsertion-Windows
            allowPackageConflicts: true
            publishVstsFeed: VS
        - task: MicroBuildInsertVsPayload@4
          displayName: üè≠ Insert VS Payload
          inputs:
            TeamName: $(TeamName)
            TeamEmail: $(TeamEmail)
            InsertionPayloadName: $(Build.Repository.Name) VALIDATION BUILD $(Build.BuildNumber) ($(Build.SourceBranch)) [Skip-SymbolCheck]
            InsertionDescription: |
              This PR is for **validation purposes only** for !$(System.PullRequest.PullRequestId). **Do not complete**.
            CustomScriptExecutionCommand: src/VSSDK/NuGet/AllowUnstablePackages.ps1
            InsertionBuildPolicy: Request Perf DDRITs
            InsertionReviewers: $(Build.RequestedForEmail)
            AutoCompletePR: false
        - powershell: |
            $insertionPRId = azure-pipelines/Get-InsertionPRId.ps1
            $Markdown = @"
            Validation insertion pull request created: !$insertionPRId
            Please check status there before proceeding to merge this PR.
            Remember to Abandon and (if allowed) to Delete Source Branch on that insertion PR when validation is complete.
            "@
            azure-pipelines/PostPRMessage.ps1 -AccessToken '$(System.AccessToken)' -Markdown $Markdown -Verbose
          displayName: ‚úèÔ∏è Comment on pull request
          condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
