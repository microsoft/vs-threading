trigger: none # We only want to trigger manually or based on resources
pr: none

resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release
  pipelines:
  - pipeline: CI
    source: vs-threading
    trigger:
      tags:
      - auto-release

variables:
- template: GlobalVariables.yml

extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool: VSEngSS-MicroBuild2022-1ES

    stages:
    - stage: release
      jobs:
      - job: release
        pool:
          name: AzurePipelines-EO
          demands:
          - ImageOverride -equals AzurePipelinesUbuntu20.04compliantGPT
          os: Linux
        templateContext:
          outputs:
          - output: nuget
            displayName: ðŸ“¦ Push packages to nuget.org
            packagesToPush: '$(Pipeline.Workspace)/CI/deployables-Windows/NuGet/*.nupkg'
            packageParentPath: $(Pipeline.Workspace)/CI/deployables-Windows/NuGet
            allowPackageConflicts: true
            nuGetFeedType: external
            publishFeedCredentials: VisualStudioExtensibility (nuget.org)
        steps:
        - checkout: none
        - powershell: |
            Write-Host "##vso[build.updatebuildnumber]$(resources.pipeline.CI.runName)"
            if ('$(resources.pipeline.CI.runName)'.Contains('-')) {
              Write-Host "##vso[task.setvariable variable=IsPrerelease]true"
            } else {
              Write-Host "##vso[task.setvariable variable=IsPrerelease]false"
            }
          displayName: âš™ Set up pipeline
        - download: CI
          artifact: deployables-Windows
          displayName: ðŸ”» Download deployables-Windows artifact
          patterns: 'deployables-Windows/NuGet/*'
        - task: GitHubRelease@1
          displayName: ðŸ“¢ GitHub release (create)
          inputs:
            gitHubConnection: AArnott
            repositoryName: $(Build.Repository.Name)
            target: $(resources.pipeline.CI.sourceCommit)
            tagSource: userSpecifiedTag
            tag: v$(resources.pipeline.CI.runName)
            title: v$(resources.pipeline.CI.runName)
            isDraft: true # After running this step, visit the new draft release, edit, and publish.
            isPreRelease: $(IsPrerelease)
            assets: $(Pipeline.Workspace)/CI/deployables-Windows/NuGet/*.nupkg
            changeLogCompareToRelease: lastNonDraftRelease
            changeLogType: issueBased
            changeLogLabels: |
              [
                { "label" : "breaking change", "displayName" : "Breaking changes", "state" : "closed" },
                { "label" : "bug", "displayName" : "Fixes", "state" : "closed" },
                { "label" : "enhancement", "displayName": "Enhancements", "state" : "closed" }
              ]
