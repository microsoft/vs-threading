<?xml version="1.0" encoding="utf-8"?>
<LCX SchemaVersion="6.0" Name="D:\a\_work\1\s\bin\Microsoft.VisualStudio.Threading.Analyzers\Release\netstandard1.3\Microsoft.VisualStudio.Threading.Analyzers.dll" PsrId="211" SrcCul="en-US" xmlns="http://schemas.microsoft.com/locstudio/2006/6/lcx" TgtCul="fr-FR">
  <OwnedComments>
    <Cmt Name="Dev" />
    <Cmt Name="LcxAdmin" />
    <Cmt Name="RCCX" />
  </OwnedComments>
  <Item ItemId=";Managed Resources" ItemType="0" PsrId="211" Leaf="true">
    <Disp Icon="Expand" Expand="true" Disp="true" LocTbl="false" />
  </Item>
  <Item ItemId=";Microsoft.VisualStudio.Threading.Analyzers.Strings.resources" ItemType="0" PsrId="211" Leaf="false">
    <Disp Icon="Expand" Expand="true" Disp="true" LocTbl="false" Path=" \ ;Managed Resources \ 0 \ 0" />
    <Item ItemId=";Strings" ItemType="0" PsrId="211" Leaf="false">
      <Disp Icon="Str" Disp="true" LocTbl="false" />
      <Item ItemId=";AwaitXInstead" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Await {0} instead]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["await" is a C# keyword and should not be translated.]D;]A;{0} is a method name.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";SystemIAsyncDisposablePackageNote" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[The System.IAsyncDisposable interface is defined in the Microsoft.Bcl.AsyncInterfaces NuGet package.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";UseAwaitInstead" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Use await instead]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["await" is a C# keyword and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD001_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Await JoinableTaskFactory.SwitchToMainThreadAsync() to switch to the UI thread instead of APIs that can deadlock or require specifying a priority.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD001_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid legacy thread switching APIs]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA[thread switching APIs refers to Visual Studio SDK or .NET methods that can be used to switch threads, but are obsolete and should be avoided.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD002_CodeFix_Await_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Use await instead]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["await" is a C# keyword and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD002_MessageFormat" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Synchronously waiting on tasks or awaiters may cause deadlocks. Use await or JoinableTaskFactory.Run instead.]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["await" is a C# keyword and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD002_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid problematic synchronous waits]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD003_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid awaiting or returning a Task representing work that was not started within your context as that can lead to deadlocks.]D;]A;Start the work within this context, or use JoinableTaskFactory.RunAsync to start the task and await the returned JoinableTask instead.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD003_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid awaiting foreign Tasks]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD004_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Calls to JoinableTaskFactory.SwitchToMainThreadAsync() must be awaited.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD004_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Await SwitchToMainThreadAsync]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA[Do not translate either of these. The first is a keyword, the second is a method name.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD010_MessageFormat_Async" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Accessing "{0}" should only be done on the main thread. Await JoinableTaskFactory.SwitchToMainThreadAsync() first.]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA[{0} is a type or member name.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD010_MessageFormat_Sync" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Accessing "{0}" should only be done on the main thread. Call {1}() first.]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA[{0} is a type or member name and {1} is the name of a method that throws if not called from the main thread.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD010_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Invoke single-threaded types on Main thread]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD011_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Lazy<Task<T>>.Value can deadlock.]D;]A;Use AsyncLazy<T> instead.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD011_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Use AsyncLazy<T>]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD011b_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Invoking or blocking on async code in a Lazy<T> value factory can deadlock.]D;]A;Use AsyncLazy<T> instead.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD012_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Provide an instance of JoinableTaskFactory in this call (or another overload) to avoid deadlocks with the main thread.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD012_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Provide JoinableTaskFactory where allowed]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD100_CodeFix_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Change return type to Task]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA[Task is a type name and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD100_MessageFormat" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid "async void" methods, because any exceptions not handled by the method will crash the process.]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["async void" is a pair of C# keywords. Do not translate them.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD100_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid async void methods]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["async void" is a pair of C# keywords. Do not translate them.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD101_MessageFormat" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid using async lambda for a void returning delegate type, because any exceptions not handled by the delegate will crash the process.]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["void" is a C# keyword and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD101_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid unsupported async delegates]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD102_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Limit use of synchronously blocking method calls such as JoinableTaskFactory.Run or Task.Result to public entrypoint members where you must be synchronous. Using it for internal members can needlessly add synchronous frames between asynchronous frames, leading to threadpool exhaustion.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD102_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Implement internal logic asynchronously]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD103_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[{0} synchronously blocks. Await {1} instead.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD103_MessageFormat_UseAwaitInstead" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[{0} synchronously blocks. Use await instead.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD103_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Call async methods when in an async method]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD104_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Expose an async version of this method that does not synchronously block. Then simplify this method to call that async method within a JoinableTaskFactory.Run delegate.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD104_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Offer async methods]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD105_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid method overloads that assume TaskScheduler.Current. Use an overload that accepts a TaskScheduler and specify TaskScheduler.Default (or any other) explicitly.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD105_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid method overloads that assume TaskScheduler.Current]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD106_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[AsyncEventHandler delegates should be invoked via the extension method "TplExtensions.InvokeAsync()" defined in Microsoft.VisualStudio.Threading assembly.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD106_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Use InvokeAsync to raise async events]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD107_CodeFix_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Await using expression]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["await" and "using" are C# keywords and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD107_MessageFormat" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Missing await operator for "using" expression.]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["await" and "using" are C# keywords and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD107_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Await Task within using expression]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["await Task" is a C# compound term, and "using" is a C# keyword. These should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD108_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Thread affinity checks should be unconditional.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD108_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Assert thread affinity unconditionally]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD109_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid throwing when not on the main thread while in an async or Task-returning method. Switch to the thread required instead.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD109_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Switch instead of assert in async methods]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD110_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Observe the awaitable result of this method call by awaiting it, assigning to a variable, or passing it to another method.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD110_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Observe result of async calls]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD111_CodeFix_False_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Add .ConfigureAwait(false)]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA[".ConfigureAwait(false)" should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD111_CodeFix_True_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Add .ConfigureAwait(true)]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA[".ConfigureAwait(true)" should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD111_MessageFormat" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Add .ConfigureAwait(bool) to your await expression.]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA[".ConfigureAwait(bool)" and "await" should NOT be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD111_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Use ConfigureAwait(bool)]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["ConfigureAwait(bool)" is a reference and should NOT be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD112_CodeFix_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Add implementation of System.IAsyncDisposable.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD112_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Implement the System.IAsyncDisposable interface when implementing the obsolete Microsoft.VisualStudio.Threading.IAsyncDisposable interface.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD112_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Implement System.IAsyncDisposable]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD113_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Add a check for System.IAsyncDisposable in the same code block that checks for Microsoft.VisualStudio.Threading.IAsyncDisposable that behaves similarly.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD113_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Check for System.IAsyncDisposable]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD114_CodeFix_CompletedTask" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Use 'Task.CompletedTask' instead]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["Task.CompletedTask" should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD114_CodeFix_FromResult" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Use 'Task.FromResult' instead]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["Task.FromResult" should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD114_MessageFormat" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid returning null from a Task-returning method.]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA[Task is a type name and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD114_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid returning a null Task]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA[Task is a type name and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD200_AddAsync_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Use "Async" suffix in names of methods that return an awaitable type.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD200_CodeFix_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Rename to {0}]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA[{0} is a method name.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD200_RemoveAsync_MessageFormat" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Avoid "Async" suffix in names of methods that do not return an awaitable type.]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD200_Title" ItemType="0" PsrId="211" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Use "Async" suffix for async methods]]></Val>
        </Str>
        <Disp Icon="Str" />
      </Item>
      <Item ItemId=";VSTHRD201_CodeFix_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Call ThrowIfCancellationRequested()]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["ThrowIfCancellationRequested" is a method name and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD201_MessageFormat" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Check for cancellation after calling SwitchToMainThreadAsync(CancellationToken).]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["SwitchToMainThreadAsync" is a method name and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
      <Item ItemId=";VSTHRD201_Title" ItemType="0" PsrId="211" InstFlg="true" Leaf="true">
        <Str Cat="Text">
          <Val><![CDATA[Check cancellation after SwitchToMainThreadAsync]]></Val>
        </Str>
        <Disp Icon="Str" />
        <Cmts>
          <Cmt Name="RCCX"><![CDATA["SwitchToMainThreadAsync" is a method name and should not be translated.]]></Cmt>
        </Cmts>
      </Item>
    </Item>
  </Item>
  <Item ItemId=";Version" ItemType="0" PsrId="211" Leaf="false">
    <Disp Icon="Ver" Disp="true" LocTbl="false" Path=" \ ;Version \ 8 \ 0" />
    <Item ItemId=";CompanyName" ItemType="0" PsrId="211" Leaf="true">
      <Str Cat="Text">
        <Val><![CDATA[Microsoft]]></Val>
      </Str>
      <Disp Icon="Str" />
    </Item>
    <Item ItemId=";FileDescription" ItemType="0" PsrId="211" Leaf="true">
      <Str Cat="Text">
        <Val><![CDATA[Microsoft.VisualStudio.Threading.Analyzers]]></Val>
      </Str>
      <Disp Icon="Str" />
    </Item>
    <Item ItemId=";InternalName" ItemType="0" PsrId="211" Leaf="true">
      <Str Cat="Text" DevLk="true">
        <Val><![CDATA[Microsoft.VisualStudio.Threading.Analyzers.dll]]></Val>
      </Str>
      <Disp Icon="Str" />
    </Item>
    <Item ItemId=";LegalCopyright" ItemType="0" PsrId="211" Leaf="true">
      <Str Cat="Text">
        <Val><![CDATA[© Microsoft Corporation. All rights reserved.]]></Val>
      </Str>
      <Disp Icon="Str" />
    </Item>
    <Item ItemId=";OriginalFilename" ItemType="0" PsrId="211" Leaf="true">
      <Str Cat="Text" DevLk="true">
        <Val><![CDATA[Microsoft.VisualStudio.Threading.Analyzers.dll]]></Val>
      </Str>
      <Disp Icon="Str" />
    </Item>
    <Item ItemId=";ProductName" ItemType="0" PsrId="211" Leaf="true">
      <Str Cat="Text">
        <Val><![CDATA[Microsoft.VisualStudio.Threading.Analyzers]]></Val>
      </Str>
      <Disp Icon="Str" />
    </Item>
  </Item>
  <Item ItemId=";Version" ItemType="8" PsrId="211" Leaf="true">
    <Disp Icon="Expand" Expand="true" Disp="true" LocTbl="false" />
  </Item>
<Settings Name="@vsLocTools@\default.lss" Type="Lss" /></LCX>